package algo.test.leet;

import static org.junit.Assert.*;

import java.util.ArrayList;

import org.junit.Test;

import algo.leet.MergeKSortedList;
import algo.util.ListNode;

public class TestMergeKSortedList {

	@Test
	public void test() {
		long start = System.nanoTime();
		MergeKSortedList mksl = new MergeKSortedList();
		ArrayList<ListNode> all = new ArrayList<ListNode>();
		ListNode ln1 = ListNode.getLN("");
		all.add(ln1);
		ListNode ret = mksl.mergeKLists(all);
		long end = System.nanoTime();
		System.out.println("time:" + (end-start) + ":" + ret);
	}
	
	@Test
	public void test0() {
		long start = System.nanoTime();
		MergeKSortedList mksl = new MergeKSortedList();
		ArrayList<ListNode> all = new ArrayList<ListNode>();
		ListNode ln1 = ListNode.getLN("-4999,-4982,-4978,-4974,-4964,-4960,-4952,-4924,-4890,-4883,-4860,-4855,-4854,-4836,-4819,-4814,-4812,-4803,-4768,-4729,-4721,-4711,-4685,-4643,-4627,-4624,-4617,-4617,-4611,-4608,-4601,-4600,-4594,-4547,-4543,-4539,-4484,-4427,-4426,-4412,-4412,-4379,-4374,-4371,-4365,-4352,-4337,-4318,-4311,-4285,-4274,-4261,-4250,-4245,-4242,-4223,-4197,-4193,-4167,-4153,-4146,-4134,-4133,-4119,-4090,-4089,-4071,-4070,-4067,-4056,-4054,-4016,-4015,-3988,-3987,-3977,-3967,-3963,-3940,-3935,-3931,-3926,-3914,-3912,-3903,-3902,-3901,-3895,-3886,-3884,-3870,-3862,-3858,-3851,-3814,-3809,-3807,-3807,-3788,-3787,-3786,-3783,-3779,-3763,-3762,-3749,-3720,-3672,-3657,-3642,-3637,-3617,-3609,-3593,-3582,-3572,-3559,-3555,-3547,-3538,-3530,-3509,-3507,-3473,-3460,-3454,-3454,-3453,-3453,-3452,-3428,-3413,-3403,-3398,-3367,-3363,-3352,-3351,-3349,-3345,-3338,-3333,-3325,-3318,-3301,-3291,-3269,-3269,-3262,-3256,-3232,-3222,-3222,-3215,-3187,-3186,-3159,-3140,-3127,-3116,-3092,-3077,-3054,-3050,-3047,-3039,-3024,-3000,-2996,-2990,-2989,-2975,-2972,-2965,-2954,-2925,-2898,-2897,-2896,-2892,-2891,-2881,-2880,-2879,-2863,-2855,-2842,-2809,-2788,-2776,-2775,-2773,-2770,-2763,-2762,-2739,-2735,-2718,-2684,-2680,-2649,-2643,-2641,-2603,-2601,-2573,-2570,-2565,-2564,-2540,-2538,-2532,-2531,-2521,-2521,-2512,-2511,-2504,-2494,-2494,-2487,-2485,-2451,-2439,-2423,-2406,-2402,-2373,-2372,-2345,-2343,-2333,-2319,-2314,-2300,-2279,-2276,-2245,-2239,-2193,-2184,-2182,-2169,-2165,-2150,-2148,-2120,-2114,-2112,-2082,-2072,-2067,-2050,-2044,-2022,-2016,-2008,-2008,-1989,-1987,-1975,-1972,-1970,-1954,-1938,-1930,-1926,-1925,-1904,-1903,-1886,-1885,-1885,-1879,-1869,-1805,-1789,-1766,-1738,-1719,-1708,-1708,-1697,-1686,-1681,-1664,-1634,-1629,-1613,-1586,-1577,-1547,-1538,-1505,-1444,-1352,-1351,-1339,-1332,-1327,-1299,-1283,-1282,-1282,-1273,-1265,-1243,-1239,-1199,-1199,-1177,-1146,-1144,-1143,-1140,-1128,-1119,-1069,-1066,-1054,-1054,-1038,-1029,-1023,-995,-993,-993,-976,-972,-955,-948,-948,-912,-902,-895,-892,-891,-885,-876,-874,-864,-858,-843,-817,-815,-814,-811,-805,-802,-800,-768,-753,-739,-728,-715,-695,-688,-676,-641,-637,-631,-625,-618,-616,-594,-592,-577,-575,-570,-559,-556,-542,-510,-510,-505,-504,-472,-468,-440,-432,-430,-418,-397,-378,-371,-365,-354,-347,-345,-339,-331,-308,-301,-287,-279,-276,-266,-265,-263,-233,-220,-216,-184,-176,-160,-159,-154,-145,-138,-135,-134,-127,-83,-37,-18,-6,-1");
		ListNode ln2 = ListNode.getLN("-4963,-4908,-4869,-4830,-4798,-4793,-4735,-4730,-4712,-4710,-4661,-4608,-4497,-4495,-4421,-4383,-4322,-4320,-4238,-4195,-4192,-4188,-4105,-4020,-4012,-3922,-3886,-3868,-3847,-3839,-3807,-3805,-3793,-3784,-3755,-3752,-3695,-3681,-3602,-3589,-3585,-3569,-3521,-3454,-3452,-3406,-3310,-3300,-3296,-3224,-3190,-3188,-3168,-3162,-3141,-3134,-3045,-3042,-3020,-2918,-2856,-2814,-2777,-2772,-2762,-2733,-2724,-2679,-2626,-2503,-2447,-2439,-2369,-2361,-2282,-2232,-2232,-2219,-2173,-2159,-2146,-2133,-2133,-2093,-2089,-2087,-2019,-1943,-1882,-1871,-1869,-1826,-1820,-1753,-1700,-1678,-1659,-1622,-1546,-1520,-1498,-1475,-1472,-1443,-1375,-1228,-1217,-1188,-1165,-1061,-1013,-979,-942,-924,-903,-835,-736,-710,-679,-656,-645,-612,-609,-603,-581,-565,-545,-520,-506,-461,-447,-386,-374,-317,-297,-99,-64,-45,-35,-28");
		ListNode ln3 = ListNode.getLN("-5000,-4995,-4977,-4973,-4968,-4961,-4956,-4904,-4897,-4894,-4879,-4870,-4857,-4856,-4852,-4839,-4829,-4827,-4820,-4816,-4811,-4806,-4803,-4802,-4786,-4785,-4783,-4769,-4761,-4737,-4696,-4677,-4673,-4672,-4663,-4656,-4634,-4611,-4609,-4606,-4586,-4582,-4568,-4558,-4544,-4538,-4538,-4518,-4507,-4503,-4482,-4458,-4451,-4441,-4439,-4429,-4429,-4428,-4419,-4406,-4397,-4378,-4378,-4374,-4371,-4366,-4359,-4339,-4327,-4325,-4320,-4275,-4268,-4265,-4247,-4243,-4240,-4238,-4225,-4216,-4213,-4211,-4198,-4193,-4189,-4180,-4177,-4136,-4099,-4087,-4064,-4060,-4040,-4025,-4017,-4009,-4004,-3999,-3988,-3984,-3983,-3974,-3973,-3964,-3959,-3946,-3943,-3934,-3932,-3929,-3901,-3900,-3895,-3889,-3879,-3877,-3875,-3867,-3857,-3838,-3811,-3811,-3803,-3802,-3795,-3787,-3775,-3741,-3733,-3725,-3713,-3713,-3704,-3703,-3692,-3681,-3668,-3650,-3635,-3630,-3618,-3616,-3606,-3604,-3559,-3556,-3549,-3534,-3528,-3524,-3521,-3519,-3505,-3502,-3501,-3495,-3485,-3470,-3468,-3456,-3455,-3438,-3420,-3417,-3414,-3409,-3395,-3387,-3381,-3369,-3365,-3362,-3358,-3310,-3306,-3298,-3290,-3278,-3261,-3258,-3256,-3246,-3237,-3222,-3181,-3163,-3142,-3130,-3127,-3124,-3121,-3113,-3062,-3050,-3045,-3039,-3038,-3019,-3007,-3000,-2998,-2998,-2965,-2965,-2963,-2957,-2923,-2922,-2906,-2892,-2890,-2883,-2881,-2870,-2858,-2832,-2804,-2799,-2792,-2788,-2775,-2770,-2765,-2760,-2752,-2745,-2721,-2717,-2714,-2710,-2709,-2702,-2690,-2686,-2684,-2683,-2678,-2675,-2664,-2656,-2651,-2607,-2601,-2595,-2585,-2570,-2567,-2558,-2558,-2553,-2538,-2526,-2523,-2523,-2513,-2513,-2500,-2491,-2482,-2469,-2466,-2466,-2441,-2439,-2434,-2398,-2390,-2368,-2363,-2348,-2317,-2315,-2312,-2310,-2309,-2305,-2303,-2298,-2289,-2257,-2248,-2222,-2217,-2210,-2203,-2196,-2194,-2188,-2186,-2165,-2144,-2134,-2095,-2086,-2085,-2082,-2075,-2073,-2062,-2061,-2053,-2045,-2035,-1999,-1989,-1973,-1964,-1954,-1951,-1930,-1916,-1911,-1910,-1906,-1906,-1903,-1892,-1872,-1867,-1863,-1843,-1840,-1824,-1804,-1778,-1775,-1760,-1751,-1694,-1679,-1646,-1595,-1574,-1562,-1547,-1543,-1541,-1531,-1523,-1521,-1512,-1508,-1491,-1483,-1481,-1477,-1475,-1474,-1452,-1426,-1418,-1410,-1391,-1388,-1375,-1369,-1355,-1343,-1321,-1301,-1298,-1279,-1268,-1264,-1262,-1242,-1241,-1225,-1223,-1220,-1206,-1205,-1203,-1202,-1187,-1164,-1131,-1115,-1114,-1112,-1109,-1108,-1107,-1103,-1101,-1081,-1078,-1077,-1074,-1066,-1065,-1042,-1015,-1008,-1005,-973,-972,-966,-951,-945,-938,-924,-903,-896,-885,-885,-880,-875,-870,-837,-831,-811,-807,-789,-756,-742,-742,-716,-713,-701,-700,-687,-677,-671,-651,-651,-646,-642,-619,-614,-612,-611,-610,-598,-597,-594,-587,-578,-575,-550,-541,-540,-530,-504,-479,-441,-438,-436,-431,-419,-400,-389,-367,-364,-358,-354,-354,-352,-340,-335,-322,-321,-320,-310,-301,-290,-284,-274,-272,-262,-242,-232,-226,-221,-196,-194,-193,-191,-170,-164,-143,-129,-127,-120,-112,-98,-93,-87,-83,-80,-60,-53,-50,-49,-18,-17,-10,-5,-5");
		ListNode ln4 = ListNode.getLN("-5000,-4999,-4964,-4961,-4931,-4926,-4920,-4896,-4865,-4847,-4847,-4846,-4838,-4827,-4815,-4808,-4800,-4798,-4793,-4764,-4717,-4710,-4699,-4686,-4665,-4648,-4645,-4636,-4632,-4620,-4617,-4606,-4589,-4577,-4554,-4539,-4518,-4504,-4504,-4502,-4500,-4477,-4458,-4424,-4418,-4417,-4361,-4323,-4314,-4311,-4283,-4260,-4242,-4241,-4236,-4234,-4205,-4184,-4170,-4149,-4140,-4128,-4127,-4124,-4123,-4121,-4095,-4088,-4055,-4050,-4048,-4021,-4020,-4012,-4001,-3982,-3976,-3973,-3973,-3949,-3939,-3886,-3863,-3860,-3857,-3823,-3817,-3812,-3809,-3808,-3802,-3793,-3767,-3759,-3752,-3728,-3718,-3709,-3709,-3708,-3707,-3687,-3683,-3660,-3650,-3644,-3620,-3613,-3613,-3583,-3544,-3502,-3498,-3490,-3478,-3473,-3460,-3449,-3427,-3411,-3409,-3406,-3396,-3394,-3385,-3383,-3325,-3321,-3299,-3296,-3284,-3280,-3265,-3247,-3224,-3208,-3203,-3197,-3129,-3114,-3102,-3093,-3087,-3075,-3072,-3062,-3053,-3030,-2988,-2981,-2952,-2940,-2927,-2892,-2882,-2870,-2867,-2840,-2833,-2793,-2771,-2757,-2747,-2732,-2697,-2689,-2679,-2676,-2666,-2661,-2653,-2648,-2600,-2595,-2561,-2553,-2535,-2531,-2530,-2490,-2489,-2484,-2482,-2475,-2470,-2447,-2441,-2437,-2371,-2352,-2341,-2331,-2321,-2311,-2280,-2277,-2270,-2259,-2178,-2159,-2154,-2124,-2095,-2082,-2071,-2070,-2064,-2044,-2037,-2025,-2022,-1988,-1984,-1983,-1969,-1963,-1956,-1951,-1935,-1915,-1908,-1874,-1860,-1842,-1829,-1818,-1788,-1780,-1757,-1753,-1743,-1732,-1725,-1714,-1712,-1707,-1697,-1669,-1658,-1655,-1646,-1645,-1634,-1614,-1610,-1593,-1593,-1582,-1561,-1559,-1554,-1550,-1534,-1527,-1527,-1487,-1478,-1429,-1424,-1396,-1390,-1387,-1378,-1372,-1368,-1349,-1346,-1323,-1322,-1314,-1299,-1290,-1263,-1255,-1254,-1232,-1228,-1224,-1211,-1207,-1199,-1163,-1163,-1160,-1118,-1112,-1109,-1092,-1060,-1055,-1054,-1042,-1008,-1002,-974,-958,-946,-941,-938,-924,-913,-898,-881,-875,-873,-852,-842,-841,-841,-841,-837,-828,-820,-819,-807,-795,-784,-780,-768,-765,-764,-749,-732,-730,-724,-716,-706,-675,-673,-663,-655,-639,-639,-631,-615,-597,-589,-575,-536,-533,-530,-530,-505,-483,-469,-464,-455,-440,-436,-429,-428,-425,-424,-416,-414,-408,-397,-394,-389,-389,-389,-367,-365,-360,-353,-349,-344,-344,-326,-291,-258,-258,-235,-234,-227,-214,-200,-190,-188,-187,-178,-167,-163,-158,-144,-109,-103,-101,-65,-49,-49,-36,-28");
		ListNode ln5 = ListNode.getLN("-5000,-4995,-4984,-4976,-4970,-4963,-4961,-4961,-4947,-4910,-4891,-4882,-4880,-4879,-4876,-4869,-4848,-4843,-4830,-4827,-4799,-4787,-4766,-4732,-4731,-4730,-4726,-4699,-4695,-4685,-4656,-4640,-4613,-4611,-4591,-4580,-4572,-4571,-4563,-4543,-4542,-4485,-4479,-4475,-4427,-4415,-4405,-4402,-4395,-4371,-4353,-4347,-4342,-4314,-4313,-4285,-4269,-4266,-4233,-4231,-4216,-4201,-4175,-4165,-4151,-4148,-4125,-4124,-4112,-4100,-4082,-4071,-4061,-4060,-4053,-4008,-4006,-4004,-3992,-3988,-3963,-3961,-3931,-3928,-3917,-3906,-3897,-3877,-3874,-3873,-3865,-3824,-3808,-3799,-3768,-3766,-3762,-3759,-3750,-3744,-3734,-3733,-3714,-3680,-3667,-3664,-3628,-3608,-3590,-3590,-3581,-3563,-3550,-3541,-3507,-3503,-3486,-3482,-3479,-3479,-3429,-3423,-3419,-3405,-3402,-3371,-3352,-3343,-3331,-3320,-3297,-3283,-3281,-3266,-3252,-3228,-3219,-3212,-3163,-3160,-3146,-3138,-3119,-3114,-3102,-3092,-3083,-3080,-3079,-3075,-3067,-3060,-3057,-3045,-3038,-3037,-3033,-3027,-3006,-3000,-2984,-2982,-2941,-2916,-2889,-2883,-2882,-2878,-2875,-2857,-2815,-2813,-2796,-2753,-2750,-2731,-2721,-2693,-2679,-2669,-2640,-2625,-2616,-2608,-2600,-2589,-2581,-2572,-2569,-2505,-2502,-2501,-2497,-2489,-2481,-2468,-2464,-2462,-2461,-2453,-2448,-2447,-2422,-2422,-2421,-2411,-2407,-2398,-2391,-2367,-2361,-2355,-2355,-2353,-2339,-2338,-2321,-2314,-2311,-2308,-2303,-2300,-2264,-2263,-2260,-2255,-2225,-2210,-2207,-2203,-2200,-2184,-2179,-2161,-2134,-2131,-2101,-2071,-2051,-2044,-2038,-2030,-2023,-1988,-1977,-1920,-1886,-1884,-1878,-1877,-1867,-1858,-1836,-1785,-1770,-1763,-1756,-1738,-1706,-1698,-1696,-1695,-1678,-1678,-1651,-1616,-1604,-1601,-1585,-1580,-1576,-1572,-1569,-1566,-1546,-1513,-1513,-1496,-1479,-1464,-1457,-1456,-1456,-1445,-1418,-1414,-1410,-1385,-1369,-1368,-1359,-1359,-1347,-1337,-1317,-1310,-1303,-1299,-1297,-1290,-1288,-1284,-1266,-1238,-1224,-1199,-1177,-1167,-1142,-1135,-1131,-1129,-1105,-1091,-1089,-1072,-1036,-1001,-988,-981,-977,-957,-948,-933,-929,-919,-915,-890,-867,-865,-824,-823,-821,-810,-768,-751,-720,-693,-684,-681,-651,-632,-630,-625,-590,-589,-559,-558,-505,-497,-492,-483,-481,-454,-451,-404,-404,-337,-328,-328,-324,-279,-275,-273,-273,-245,-241,-238,-234,-233,-227,-214,-203,-190,-183,-178,-138,-131,-130,-110,-91,-62,-61,-59,-40,-23,-9,-8,-2");
		ListNode ln6 = ListNode.getLN("-4997,-4971,-4966,-4959,-4949,-4940,-4895,-4823,-4792,-4781,-4756,-4745,-4698,-4690,-4657,-4618,-4598,-4511,-4482,-4481,-4456,-4453,-4446,-4446,-4441,-4419,-4405,-4381,-4375,-4354,-4325,-4317,-4300,-4265,-4261,-4258,-4193,-4185,-4183,-4162,-4153,-4143,-4118,-4117,-4102,-4091,-4088,-4085,-4079,-4044,-4038,-3996,-3985,-3957,-3950,-3890,-3888,-3885,-3826,-3822,-3819,-3816,-3814,-3812,-3805,-3801,-3789,-3746,-3711,-3645,-3644,-3636,-3622,-3619,-3614,-3605,-3559,-3543,-3522,-3483,-3446,-3426,-3422,-3407,-3397,-3396,-3364,-3316,-3295,-3271,-3270,-3245,-3228,-3215,-3197,-3164,-3163,-3161,-3082,-3070,-3060,-3043,-3028,-3006,-2997,-2972,-2947,-2942,-2842,-2838,-2802,-2779,-2752,-2726,-2705,-2655,-2652,-2647,-2576,-2530,-2512,-2510,-2454,-2390,-2350,-2311,-2210,-2202,-2199,-2163,-2114,-2113,-2098,-2084,-2083,-2072,-2042,-2035,-2032,-1993,-1975,-1971,-1952,-1921,-1916,-1873,-1859,-1855,-1853,-1849,-1845,-1829,-1829,-1808,-1792,-1791,-1781,-1771,-1757,-1715,-1637,-1628,-1617,-1606,-1600,-1566,-1552,-1540,-1540,-1538,-1528,-1524,-1515,-1512,-1462,-1406,-1400,-1396,-1356,-1328,-1313,-1269,-1173,-1167,-1108,-1100,-1046,-1044,-1041,-1016,-1011,-1011,-986,-954,-921,-832,-829,-812,-796,-792,-789,-783,-737,-691,-679,-676,-661,-631,-590,-588,-581,-511,-501,-460,-441,-428,-380,-373,-352,-343,-331,-313,-312,-304,-269,-239,-188,-164,-139,-137,-134,-125,-121,-101,-97,-75,-25,-6");
		all.add(ln1);
		all.add(ln2);
		all.add(ln3);
		all.add(ln4);
		all.add(ln5);
		all.add(ln6);
		ListNode ret = mksl.mergeKLists(all);
		long end = System.nanoTime();
		System.out.println("time:" + (end-start) + ":" + ret);
	}
	
	@Test
	public void test1() {
		long start = System.nanoTime();
		MergeKSortedList mksl = new MergeKSortedList();
		ArrayList<ListNode> all = new ArrayList<ListNode>();
		for (int i=0;i<10;i++){
			ListNode ln1 = ListNode.getLN("1,3,4,7,8,8,9");
			ListNode ln2 = ListNode.getLN("2,3,4,7,8,10,11");
			all.add(ln1);
			all.add(ln2);
		}
		ListNode ret = mksl.mergeKLists(all);
		long end = System.nanoTime();
		System.out.println("time:" + (end-start) + ":" + ret);
	}
	
	@Test
	public void test2() {
		long start = System.nanoTime();
		MergeKSortedList mksl = new MergeKSortedList();
		ArrayList<ListNode> all = new ArrayList<ListNode>();
		for (int i=0;i<100;i++){
			ListNode ln1 = ListNode.getLN("1,3,4,7,8,8,9");
			ListNode ln2 = ListNode.getLN("2,3,4,7,8,10,11");
			all.add(ln1);
			all.add(ln2);
		}
		ListNode ret = mksl.mergeKLists(all);
		long end = System.nanoTime();
		System.out.println("time:" + (end-start) + ":" + ret);
	}

}
